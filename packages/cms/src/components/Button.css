@import "../css/mixins.css";

/* TODO: make into component with props */

/* buttons */
.cms-button {
  padding: 0.5em 2em;
  border-radius: 10em;
  border: none !important;
  /* transitions */
  transition:
    color 0.2s ease-out,
    background-color 0.2s ease-out,
    border-color 0.2s ease-out;
  /* theming */
  background-color: var(--accent-dark);
  border-color: var(--accent-dark);
  color: var(--white);

  /* interactions */
  &:hover, &:focus {
    background-color: var(--accent-black);
    border-color: var(--accent-black);
  }


  /* override blueprint when both classes are in place */
  &.bp3-button {
    box-shadow: none;
    background-image: none;
    &:hover {
      box-shadow: none;
    }
  }

  & .bp3-icon {
    top: -1px;
  }

  /* disabled state */
  &.is-disabled,
  &[disabled] {
    text-align: center;
    background-color: var(--gray) !important;
    cursor: not-allowed;
    pointer-events: none;
  }

  /* TODO: generalize icon-only style as mixin, move additional overrides to SimpleGeneratorEditor.css */
  /* used by "generated variables" button in generator UI mode */
  &.cms-button-icon-only {
    width: 2.375em;
    min-width: none;
    padding-left: 0;
    padding-right: 0;
    transform: scale(0.75);
  }

  &.is-block {
    display: block;
    width: 100%;
  }
}

/* naked / ghost button theming */
.cms-button-naked {
  background-color: transparent;
  border: none;
  color: var(--accent-dark);

  /* interactions */
  &:hover, &:focus {
    color: var(--accent-black);
  }

  @mixin dark-mode {
    color: var(--accent-light);

    /* interactions */
    &:hover, &:focus {
      color: var(--accent);
    }
  }
}
